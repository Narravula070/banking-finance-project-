pipeline {
  agent any

  tools {
    maven 'M2_HOME'
    terraform 'terraform'
  }

  stages {
    stage('Package the Application') {
      steps {
        echo "Packaging the Application"
        sh 'mvn clean package'
      }
    }

    stage('Publish Reports using HTML') {
      steps {
        publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '/var/lib/jenkins/workspace/bank-pro/target/surefire-reports', reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: '', useWrapperFileDirectly: true])
      }
    }

    stage('Docker Image Creation') {
      steps {
        sh 'docker build -t kranthi619/insure-me:latest .'
      }
    }

    stage('Docker Login') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'Docker-Hub', passwordVariable: 'dockerHubPassword', usernameVariable: 'dockerHubUser')]) {
          sh "docker login -u ${env.dockerHubUser} -p ${env.dockerHubPassword}"
        }
      }
    }

    stage('Set Terraform Environment') {
      steps {
        withEnv(["AWS_PROFILE=ilab"]) {
          sh 'echo "Terraform environment set"'
        }
      }
    }

    stage('Get Directory') {
      steps {
        println(env.WORKSPACE)
      }
    }

    stage('Terraform init') {
      steps {
        sh 'cd /var/lib/jenkins/workspace/bank-pro/test-server && terraform init'
      }
    }

    stage('Terraform Apply') {
      steps {
        withCredentials([[
            $class: 'AmazonWebServicesCredentialsBinding',
            credentialsId: "aws-jenkins",
            accessKeyVariable: 'AWS_ACCESS_KEY_ID',
            secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {
          dir('terraform') {
            sh "terraform apply --auto-approve -var 'aws_access_key=${AWS_ACCESS_KEY_ID}' -var 'aws_secret_key=${AWS_SECRET_ACCESS_KEY}' -var 'aws_region=${aws_region}' -var 'key_name=${key_name}' -var 'instance_type=${instance_type}' -var 'security_group=${security_group}' -var 'tag_name=${tag_name}' -var 'ami_id=${ami_id}'"
          }
        }
      }
    }
  }
}



